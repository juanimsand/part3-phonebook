{"version":3,"sources":["components/Header.js","components/Campo.js","components/Datos.js","components/Formulario.js","components/Mensaje.js","services/persons.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","title","Campo","descrip","value","valor","onChange","cambio","Datos","personas","map","persona","key","id","name","number","onClick","elimina","Formulario","onSubmit","dato1","cambio1","dato2","cambio2","type","Mensaje","msj","msjestado","className","baseUrl","axios","get","then","response","data","cargaDatos","post","put","delete","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","filtrado","setFiltrado","mensaje","setMensaje","msjEstado","setMsjEstado","useEffect","console","log","personsServices","personsInicial","catch","error","alert","event","target","filter","person","toLowerCase","includes","preventDefault","some","window","confirm","persupdate","find","elemento","returnedDatos","setTimeout","returnedPersona","concat","parseInt","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"8OAUeA,EARA,SAACC,GACZ,OACI,6BACI,4BAAKA,EAAMC,SCKRC,EARD,SAACF,GACX,OACI,6BACKA,EAAMG,QAAQ,2BAAOC,MAAOJ,EAAMK,MAAOC,SAAUN,EAAMO,WCIvDC,EAPD,SAACR,GACX,OACIA,EAAMS,SAASC,KAAI,SAAAC,GAAO,OAAI,yBAAKC,IAAKD,EAAQE,IAAKF,EAAQG,KAA/B,IAAsCH,EAAQI,OAAO,4BAC/EC,QAAShB,EAAMiB,QAASJ,GAAIF,EAAQG,KAAMV,MAAOO,EAAQE,IADsB,iBCW5EK,EAZI,SAAClB,GAChB,OACI,0BAAMmB,SAAUnB,EAAMmB,UAClB,kBAAC,EAAD,CAAOd,MAAOL,EAAMoB,MAAOb,OAAQP,EAAMqB,QAASlB,QAAQ,WAC1D,kBAAC,EAAD,CAAOE,MAAOL,EAAMsB,MAAOf,OAAQP,EAAMuB,QAASpB,QAAQ,aAC1D,6BACI,4BAAQqB,KAAK,UAAb,UCcDC,G,MApBC,SAACzB,GACb,OAAkB,OAAdA,EAAM0B,IACC,KAEkB,MAApB1B,EAAM2B,UAEP,yBAAKC,UAAU,mBACV5B,EAAM0B,KAIU,MAApB1B,EAAM2B,UAEP,yBAAKC,UAAU,mBACV5B,EAAM0B,UAHd,I,gBCbHG,EAAU,uDAsBD,EApBI,WAEf,OADgBC,IAAMC,IAAN,UAAaF,IACdG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAkB9B,EAfA,SAAAC,GAEX,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa9B,EAVA,SAACrB,EAAIsB,GAEhB,OADgBL,IAAMO,IAAN,UAAaR,EAAb,YAAwBhB,GAAMsB,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ9B,EALE,SAAArB,GAEb,OADgBiB,IAAMQ,OAAN,UAAgBT,EAAhB,YAA2BhB,IAC5BmB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SC8H9BK,EApIH,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACPC,EADO,KACEC,EADF,OAEgBF,mBAAS,IAFzB,mBAEPG,EAFO,KAEEC,EAFF,OAGoBJ,mBAAS,IAH7B,mBAGPK,EAHO,KAGIC,EAHJ,OAIoBN,mBAAS,IAJ7B,mBAIPO,EAJO,KAIIC,EAJJ,OAKkBR,mBAAS,IAL3B,mBAKPS,EALO,KAKGC,EALH,OAMgBV,mBAAS,MANzB,mBAMPW,EANO,KAMEC,EANF,OAOoBZ,mBAAS,MAP7B,mBAOPa,EAPO,KAOIC,EAPJ,KASdC,qBAAU,WACNC,QAAQC,IAAI,UACZC,IACkB1B,MAAK,SAAA2B,GACfH,QAAQC,IAAI,qBACZf,EAAWiB,MAEdC,OAAM,SAAAC,GACHC,MAAM,iDAEf,IAiGH,OACI,6BACI,kBAAC,EAAD,CAAQ7D,MAAM,cACd,kBAAC,EAAD,CAAOI,MAAO0C,EAAWxC,OA1BT,SAACwD,GACrBP,QAAQC,IAAIM,EAAMC,OAAO5D,OACzB4C,EAAae,EAAMC,OAAO5D,OACC,KAAvB2D,EAAMC,OAAO5D,MAAc8C,EAAY,IACtCA,EAAYT,EAAQwB,QAAQ,SAAAC,GAAM,OAAIA,EAAOpD,KAAKqD,cAAcC,SAASL,EAAMC,OAAO5D,MAAM+D,oBAsB3ChE,QAAQ,wBAC1D,kBAAC,EAAD,CAAQF,MAAM,YACd,kBAAC,EAAD,CAAYkB,SAnGD,SAAC4C,GAChBA,EAAMM,iBACNb,QAAQC,IAAI,cACZ,IAAMtB,EAAa,CAAErB,KAAM6B,EAAS5B,OAAQ8B,GAC5C,GAAIJ,EAAQ6B,MAAK,SAAAJ,GAAM,OAAIA,EAAOpD,OAAS6B,MACvC,GAAI4B,OAAOC,QAAP,UAAkB7B,EAAlB,8EAAuG,CACvG,IAAM8B,EAAahC,EAAQiC,MAAK,SAAAC,GAAQ,OAAIA,EAAS7D,OAAS6B,KAE9De,EACYe,EAAW5D,GAAIsB,GAAYH,MAAK,SAAA4C,GACpCpB,QAAQC,IAAI,qBACZf,EAAWD,EAAQ/B,KAAI,SAAAC,GAAO,OAAIA,EAAQE,KAAO+D,EAAc/D,GAAKF,EAAUiE,MAC9EtB,EAAa,KACbF,EAAW,iBAAD,OAAkBT,EAAlB,sBACVkC,YAAW,WACPzB,EAAW,MACXE,EAAa,QACd,QAENM,OAAM,SAAAC,GACHP,EAAa,KACbF,EAAW,GAAD,OAAIT,EAAJ,8CACVkC,YAAW,WACPzB,EAAW,MACXE,EAAa,MACbZ,EAAWD,EAAQwB,QAAO,SAAAC,GAAM,OAAIA,EAAOrD,KAAO4D,EAAW5D,SAC9D,cAOf6C,EACYvB,GAAYH,MAAK,SAAA8C,GACrBtB,QAAQC,IAAI,qBACZf,EAAWD,EAAQsC,OAAOD,IAC1BxB,EAAa,KACbF,EAAW,GAAD,OAAIT,EAAJ,qCACVkC,YAAW,WACPzB,EAAW,MACXE,EAAa,QACd,QAENM,OAAM,SAAAC,GACHC,MAAM,6CAIlBlB,EAAW,IACXE,EAAa,KAiDyB1B,MAAOuB,EAAStB,QA9CpC,SAAC0C,GACnBP,QAAQC,IAAIM,EAAMC,OAAO5D,OACzBwC,EAAWmB,EAAMC,OAAO5D,OAEpBqC,EAAQ6B,MAAK,SAAAJ,GAAM,OAAIA,EAAOpD,OAASiD,EAAMC,OAAO5D,UACpDmE,OAAOT,MAAP,UAAgBC,EAAMC,OAAO5D,MAA7B,wCA0CIkB,MAAOuB,EAAWtB,QAtCN,SAACwC,GACrBP,QAAQC,IAAIM,EAAMC,OAAO5D,OACzB0C,EAAaiB,EAAMC,OAAO5D,OAEtBqC,EAAQ6B,MAAK,SAAAJ,GAAM,OAAIA,EAAOnD,SAAWgD,EAAMC,OAAO5D,UACtDmE,OAAOT,MAAP,qBAA2BC,EAAMC,OAAO5D,MAAxC,0CAkCA,kBAAC,EAAD,CAAQH,MAAM,kBACd,kBAAC,EAAD,CAAOQ,SAAUwC,IACjB,kBAAC,EAAD,CAAQhD,MAAM,yBACd,kBAAC,EAAD,CAASyB,IAAKyB,EAASxB,UAAW0B,IAClC,kBAAC,EAAD,CAAO5C,SAAUgC,EAASxB,QA3Bb,SAAC8C,GAClBA,EAAMM,iBACNb,QAAQC,IAAI,gBACZ,IAAM5C,EAAKmE,SAASjB,EAAMC,OAAO5D,OAC7BmE,OAAOC,QAAP,uCAA+CT,EAAMC,OAAOnD,MAChE6C,EACcK,EAAMC,OAAO5D,OAAO4B,MAAK,SAAA8C,GAC/BtB,QAAQC,IAAI,qBACZf,EAAWD,EAAQwB,QAAO,SAAAtD,GAAO,OAAKA,EAAQE,KAAOA,SAExD+C,OAAM,SAAAC,GACHC,MAAM,kDCjHFmB,QACW,cAA7BV,OAAOW,SAASC,UAEe,UAA7BZ,OAAOW,SAASC,UAEhBZ,OAAOW,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB5D,MAAK,SAAA6D,GACJA,EAAaC,gBAEdlC,OAAM,SAAAC,GACLL,QAAQK,MAAMA,EAAMkC,c","file":"static/js/main.fe889b36.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <div>\r\n            <h2>{props.title}</h2>\r\n        </div>\r\n        );\r\n}\r\n\r\nexport default Header","import React from 'react'\r\n\r\nconst Campo = (props) => {\r\n    return (\r\n        <div>\r\n            {props.descrip}<input value={props.valor} onChange={props.cambio} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Campo","import React from 'react'\r\n\r\nconst Datos = (props) => {\r\n    return (\r\n        props.personas.map(persona => <div key={persona.id}>{persona.name} {persona.number}<button\r\n            onClick={props.elimina} id={persona.name} value={persona.id}>Eliminar</button></div>)\r\n    );\r\n}\r\n\r\nexport default Datos","import React from 'react'\r\nimport Campo from './Campo'\r\n\r\nconst Formulario = (props) => {\r\n    return (\r\n        <form onSubmit={props.onSubmit}>\r\n            <Campo valor={props.dato1} cambio={props.cambio1} descrip=\"name: \" />\r\n            <Campo valor={props.dato2} cambio={props.cambio2} descrip=\"number: \" />\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Formulario","import React from 'react'\r\nimport './Mensaje.css'\r\n\r\nconst Mensaje = (props) => {\r\n    if (props.msj === null) {\r\n        return null;\r\n    }\r\n    else if (props.msjestado === 'p') {\r\n        return (\r\n            <div className=\"classMensajePos\">\r\n                {props.msj}\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.msjestado === 'n') {\r\n        return (\r\n            <div className=\"classMensajeNeg\">\r\n                {props.msj}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Mensaje","import axios from 'axios'\r\nconst baseUrl = 'https://powerful-tor-42247.herokuapp.com/api/persons'\r\n\r\nconst getPersons = () => {\r\n    const request = axios.get(`${baseUrl}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = cargaDatos => {\r\n    const request = axios.post(baseUrl, cargaDatos)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, cargaDatos) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, cargaDatos)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst eliminar = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getPersons, create, update, eliminar}","// ESTA RESUELTO 2.6, 2.7 Y 2.8, Y 2.9, Y OBVIO EL 2.10, Y EL 2.11\r\n// TAMBIEN EL 2.15, 2.16, 2.17 Y 2.18\r\n// TAMBIEN 2.19 Y 2.20\r\n\r\nimport React, { useState, useEffect } from 'react'\r\n//import axios from 'axios'\r\nimport Header from './components/Header'\r\nimport Campo from './components/Campo'\r\nimport Datos from './components/Datos'\r\nimport Formulario from './components/Formulario'\r\nimport Mensaje from './components/Mensaje'\r\n\r\nimport personsServices from './services/persons'\r\n\r\nconst App = () => {\r\n    const [persons, setPersons] = useState([])\r\n    const [newName, setNewName] = useState('')\r\n    const [newNumber, setNewNumber] = useState('')\r\n    const [newFilter, setNewFilter] = useState('')\r\n    const [filtrado, setFiltrado] = useState([])\r\n    const [mensaje, setMensaje] = useState(null)\r\n    const [msjEstado, setMsjEstado] = useState(null)\r\n\r\n    useEffect(() => {\r\n        console.log('effect')\r\n        personsServices\r\n            .getPersons().then(personsInicial => {\r\n                console.log('promise fulfilled')\r\n                setPersons(personsInicial)\r\n            })\r\n            .catch(error => {\r\n                alert('Oops! We are in prescence of an error 1!')\r\n            })\r\n    }, [])\r\n\r\n\r\n    const addPersona = (event) => {\r\n        event.preventDefault()\r\n        console.log('addPersona')\r\n        const cargaDatos = { name: newName, number: newNumber }\r\n        if (persons.some(person => person.name === newName)) {\r\n            if (window.confirm(`${newName} is already added to the phonebook, do you want to update the old number?`)) {\r\n                const persupdate = persons.find(elemento => elemento.name === newName)\r\n                \r\n                personsServices\r\n                    .update(persupdate.id, cargaDatos).then(returnedDatos => {\r\n                        console.log('promise fulfilled')\r\n                        setPersons(persons.map(persona => persona.id !== returnedDatos.id ? persona : returnedDatos))\r\n                        setMsjEstado('p')\r\n                        setMensaje(`The number of ${newName} has been updated`)\r\n                        setTimeout(() => {\r\n                            setMensaje(null)\r\n                            setMsjEstado(null)\r\n                        }, 4000)\r\n                    })\r\n                    .catch(error => {\r\n                        setMsjEstado('n')\r\n                        setMensaje(`${newName} cannot be updated, seems its was deleted`)\r\n                        setTimeout(() => {\r\n                            setMensaje(null)\r\n                            setMsjEstado(null)\r\n                            setPersons(persons.filter(person => person.id !== persupdate.id))\r\n                        }, 4000)\r\n                        //alert('Oops! We are in prescence of an error!')\r\n                    })\r\n                \r\n            }\r\n        }\r\n        else {\r\n            personsServices\r\n                .create(cargaDatos).then(returnedPersona => {\r\n                    console.log('promise fulfilled')\r\n                    setPersons(persons.concat(returnedPersona))\r\n                    setMsjEstado('p')\r\n                    setMensaje(`${newName} has been added to the phonebook`)\r\n                    setTimeout(() => {\r\n                        setMensaje(null)\r\n                        setMsjEstado(null)\r\n                    }, 4000)\r\n                })\r\n                .catch(error => {\r\n                    alert('Oops! We are in prescence of an error!')\r\n                })\r\n            \r\n        }\r\n        setNewName('')\r\n        setNewNumber('')\r\n    }\r\n\r\n    const handleNewName = (event) => {\r\n        console.log(event.target.value)\r\n        setNewName(event.target.value)\r\n        // Hago un alert si el newName esta en persons\r\n        if (persons.some(person => person.name === event.target.value)) {\r\n            window.alert(`${event.target.value} is already added to the phonebook`)\r\n        }\r\n    }\r\n\r\n    const handleNewNumber = (event) => {\r\n        console.log(event.target.value)\r\n        setNewNumber(event.target.value)\r\n        // Hago un alert si el newName esta en persons\r\n        if (persons.some(person => person.number === event.target.value)) {\r\n            window.alert(`The number ${event.target.value} is already added to the phonebook`)\r\n        }\r\n    }\r\n\r\n    const handleNewFilter = (event) => {\r\n        console.log(event.target.value)\r\n        setNewFilter(event.target.value)\r\n        if (event.target.value === '') setFiltrado([])\r\n        else setFiltrado(persons.filter( person => person.name.toLowerCase().includes(event.target.value.toLowerCase())))\r\n    }\r\n\r\n    const handleDelete = (event) => {\r\n        event.preventDefault()\r\n        console.log('handleDelete')\r\n        const id = parseInt(event.target.value)\r\n        if (window.confirm(`Are you sure you want delete ${event.target.id}`))\r\n        personsServices\r\n            .eliminar(event.target.value).then(returnedPersona => {\r\n                console.log('promise fulfilled')\r\n                setPersons(persons.filter(persona => (persona.id !== id)))\r\n            })\r\n            .catch(error => {\r\n                alert('Oops! We are in prescence of an error!')\r\n            })  \r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Header title=\"Phonebook\" />\r\n            <Campo valor={newFilter} cambio={handleNewFilter} descrip=\"filter shown with: \"/>\r\n            <Header title=\"Add New\" />\r\n            <Formulario onSubmit={addPersona} dato1={newName} cambio1={handleNewName}\r\n                dato2={newNumber} cambio2={handleNewNumber}/>\r\n            <Header title=\"Filter person\" />\r\n            <Datos personas={filtrado} />\r\n            <Header title=\"Persons of phonebook\" />\r\n            <Mensaje msj={mensaje} msjestado={msjEstado} />\r\n            <Datos personas={persons} elimina={handleDelete}/>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}